package gui;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

import javax.swing.JFileChooser;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

public class Gui extends javax.swing.JFrame {
    
    /** Creates new form Gui */
    public Gui() {
        info = new Info(this);
        initComponents();
        rebuilt = false;
        usedPDB = false;
        aminoAcids = new ArrayList<String>();
        customHPSeq = "";
        
        //server_name = "cs-linux-008.unbc.ca";
        
    }
    
    public boolean hasAminoAcids(){
        if(aminoAcids != null && aminoAcids.size() > 0){
            return true;
        }
        return false;
    }
    
    public int getUserChargesLength(){
        return user_charges.getText().length();
    }
    
    public int getAminoAcidSeqLength(){
        return aminoAcids.size();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        user_charges = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prot_info_box = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        swap_ss = new javax.swing.JSlider();
        jTextField4 = new javax.swing.JTextField();
        add_ss = new javax.swing.JSlider();
        jTextField5 = new javax.swing.JTextField();
        Mut_prob = new javax.swing.JSlider();
        jTextField6 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField7 = new javax.swing.JTextField();
        int imin_ss_len =4;
        int imax_ss_len = 150;
        int iss_len_step = 1;
        int iss_min_defVal = 8;
        SpinnerModel minSS = new SpinnerNumberModel(iss_min_defVal,imin_ss_len,imax_ss_len,iss_len_step);
        min_ss_len = new javax.swing.JSpinner(minSS);
        jTextField8 = new javax.swing.JTextField();
        int iss_max_defVal = 50;
        SpinnerModel maxSS = new SpinnerNumberModel(iss_max_defVal,imin_ss_len,imax_ss_len,iss_len_step);
        max_ss_len = new javax.swing.JSpinner(maxSS);
        jTextField9 = new javax.swing.JTextField();
        int imin_qt =0;
        int imax_qt = 50;
        int iss_qt_defVal = 20;
        SpinnerModel qtSS = new SpinnerNumberModel(iss_qt_defVal,imin_qt,imax_qt,iss_len_step);
        max_ss_qt = new javax.swing.JSpinner(qtSS);
        jScrollPane2 = new javax.swing.JScrollPane();
        user_ss_define = new javax.swing.JTable();
        jTextField10 = new javax.swing.JTextField();
        user_ss_only = new javax.swing.JCheckBox();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        int imin_ga_its =10;
        int imax_ga_its =10000000;
        int iga_step = 10;
        int iga_defVal = 100000;
        SpinnerModel ga_its = new SpinnerNumberModel(iga_defVal,imin_ga_its,imax_ga_its,iga_step);
        ga_cycles = new javax.swing.JSpinner(ga_its);
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        int imin_pop_size =100;
        int imax_pop_size =10000000;
        int ipop_step = 10;
        int ipop_defVal = 500;
        SpinnerModel ipop_size = new SpinnerNumberModel(ipop_defVal,imin_pop_size,imax_pop_size,ipop_step);
        pop_size = new javax.swing.JSpinner(ipop_size);
        int imin_pops =1;
        int imax_pops =100;
        int ipops_step = 1;
        int ipops_defVal = 1;
        SpinnerModel ipops = new SpinnerNumberModel(ipops_defVal,imin_pops,imax_pops,ipops_step);
        num_pops = new javax.swing.JSpinner(ipops);
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AminoSequenceBox = new javax.swing.JTextArea();
        Delete_Button = new javax.swing.JButton();
        Alanine_Button = new javax.swing.JButton();
        Arginine_Button = new javax.swing.JButton();
        Asparagine_Button = new javax.swing.JButton();
        AsparticAcid_Button = new javax.swing.JButton();
        GlutamicAcid_Button = new javax.swing.JButton();
        Glutamine_Button = new javax.swing.JButton();
        Glycine_Button = new javax.swing.JButton();
        Histidine_Button = new javax.swing.JButton();
        Isoleucine_Button = new javax.swing.JButton();
        Lysine_Button = new javax.swing.JButton();
        Proline_Button = new javax.swing.JButton();
        Serine_Button = new javax.swing.JButton();
        Threonine_Button = new javax.swing.JButton();
        Valine_Button = new javax.swing.JButton();
        Cysteine_Button = new javax.swing.JButton();
        Leucine_Button = new javax.swing.JButton();
        Methionine_Button = new javax.swing.JButton();
        Phenylalanine_Button = new javax.swing.JButton();
        Tryptophan_Button = new javax.swing.JButton();
        Tyrosine_Button = new javax.swing.JButton();
        Clear_Button = new javax.swing.JButton();
        Random_Button = new javax.swing.JButton();
        jTextField16 = new javax.swing.JTextField();
        int imin_ranSize =1;
        int imax_ranSize =15;
        int iranSize_step = 1;
        int iranSize_defVal = 1;
        SpinnerModel ranSize = new SpinnerNumberModel(iranSize_defVal,imin_ranSize,imax_ranSize,iranSize_step);
        Random_Size = new javax.swing.JSpinner(ranSize);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();

        FileChooser.setFileFilter(new MyCustomFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("3D HP Model");
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(600, 400));
        setName("3D HP Model"); // NOI18N
        setResizable(false);

        user_charges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_chargesActionPerformed(evt);
            }
        });

        jButton1.setText("Generate");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        view1 = new HP_Model_Viewer();
        view1.build(jPanel1, info.getBigView(),"hphphphhhhhhhhhhhhhhphphphpphphhhhhpphphphpphphphphphpphphphpphph");

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));
        view2 = new HP_Model_Viewer();
        view2.build(jPanel2,info.getView1(),"hphphphhhhhhhhhhhhhhphphphpphphhhhhpphphphpphphphphphpphphphpphph");

        jPanel4.setBackground(java.awt.Color.white);
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));
        view4 = new HP_Model_Viewer();
        view4.build(jPanel4,info.getView3(),"hphphphhhhhhhhhhhhhhphphphpphphhhhhpphphphpphphphphphpphphphpphph");

        jButton2.setText("Back");
        jButton2.setEnabled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(75, 29));
        jButton2.setMinimumSize(new java.awt.Dimension(75, 29));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Next");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(java.awt.Color.white);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));
        view3 = new HP_Model_Viewer();
        view3.build(jPanel3,info.getView2(),"hphphphhhhhhhhhhhhhhphphphpphphhhhhpphphphpphphphphphpphphphpphph");

        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("View");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("View");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        prot_info_box.setEditable(false);
        prot_info_box.setBackground(java.awt.Color.lightGray);
        prot_info_box.setColumns(20);
        prot_info_box.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        prot_info_box.setLineWrap(true);
        prot_info_box.setRows(5);
        prot_info_box.setMargin(new java.awt.Insets(5, 5, 5, 5));
        prot_info_box.setMinimumSize(new java.awt.Dimension(270, 120));
        jScrollPane1.setViewportView(prot_info_box);
        prot_info_box.setText("Welcome to 3DHP\nInteractive protien folder\n\nPlease enter charges\nExample: hhhphphp");

        jButton4.setText("Comments");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField2.setText("Probabilities");
        jTextField2.setBorder(null);
        jTextField2.setOpaque(false);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField3.setText("Swap Secondary Structures");
        jTextField3.setBorder(null);
        jTextField3.setOpaque(false);

        swap_ss.setValue(10);

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField4.setText("Add Secondary Structures");
        jTextField4.setBorder(null);
        jTextField4.setOpaque(false);

        add_ss.setValue(60);

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField5.setText("Mutation Occuring");
        jTextField5.setBorder(null);
        jTextField5.setOpaque(false);

        Mut_prob.setValue(20);

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField6.setText("Secondary Structures");
        jTextField6.setBorder(null);
        jTextField6.setOpaque(false);

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField7.setText("Min Length");
        jTextField7.setBorder(null);
        jTextField7.setOpaque(false);

        jTextField8.setEditable(false);
        jTextField8.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField8.setText("Max Length");
        jTextField8.setBorder(null);
        jTextField8.setOpaque(false);

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField9.setText("Max Quantity");
        jTextField9.setBorder(null);
        jTextField9.setOpaque(false);

        user_ss_define.setAutoCreateRowSorter(true);
        user_ss_define.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Lengths"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        user_ss_define.setCellSelectionEnabled(true);
        user_ss_define.setPreferredSize(new java.awt.Dimension(80, 450));
        user_ss_define.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(user_ss_define);
        user_ss_define.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        user_ss_define.getColumnModel().getColumn(0).setResizable(false);

        jTextField10.setEditable(false);
        jTextField10.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField10.setText("Define Lengths");
        jTextField10.setBorder(null);
        jTextField10.setOpaque(false);

        user_ss_only.setText("Limit To");

        jTextField12.setEditable(false);
        jTextField12.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField12.setText("Evolution cycles");
        jTextField12.setBorder(null);
        jTextField12.setOpaque(false);

        jTextField13.setEditable(false);
        jTextField13.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField13.setText("Computational Complexity");
        jTextField13.setBorder(null);
        jTextField13.setOpaque(false);

        jTextField14.setEditable(false);
        jTextField14.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField14.setText("Num Populations");
        jTextField14.setBorder(null);
        jTextField14.setOpaque(false);

        jTextField15.setEditable(false);
        jTextField15.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField15.setText("Population Size");
        jTextField15.setBorder(null);
        jTextField15.setOpaque(false);

        jButton8.setText("Edit Structure");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Connection");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Custom Amino Acid Sequence"));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        AminoSequenceBox.setColumns(20);
        AminoSequenceBox.setRows(5);
        jScrollPane3.setViewportView(AminoSequenceBox);

        Delete_Button.setText("Delete");
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        Alanine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Alanine_Button.setText("Alanine");
        Alanine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alanine_ButtonActionPerformed(evt);
            }
        });

        Arginine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Arginine_Button.setText("Arginine");
        Arginine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Arginine_ButtonActionPerformed(evt);
            }
        });

        Asparagine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Asparagine_Button.setText("Asparagine");
        Asparagine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Asparagine_ButtonActionPerformed(evt);
            }
        });

        AsparticAcid_Button.setForeground(new java.awt.Color(0, 0, 255));
        AsparticAcid_Button.setText("Aspartic Acid");
        AsparticAcid_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsparticAcid_ButtonActionPerformed(evt);
            }
        });

        GlutamicAcid_Button.setForeground(new java.awt.Color(0, 0, 255));
        GlutamicAcid_Button.setText("Glutamic Acid");
        GlutamicAcid_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GlutamicAcid_ButtonActionPerformed(evt);
            }
        });

        Glutamine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Glutamine_Button.setText("Glutamine");
        Glutamine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Glutamine_ButtonActionPerformed(evt);
            }
        });

        Glycine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Glycine_Button.setText("Glycine");
        Glycine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Glycine_ButtonActionPerformed(evt);
            }
        });

        Histidine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Histidine_Button.setText("Histidine");
        Histidine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Histidine_ButtonActionPerformed(evt);
            }
        });

        Isoleucine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Isoleucine_Button.setText("Isoleucine");
        Isoleucine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Isoleucine_ButtonActionPerformed(evt);
            }
        });

        Lysine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Lysine_Button.setText("Lysine");
        Lysine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lysine_ButtonActionPerformed(evt);
            }
        });

        Proline_Button.setForeground(new java.awt.Color(255, 0, 0));
        Proline_Button.setText("Proline");
        Proline_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proline_ButtonActionPerformed(evt);
            }
        });

        Serine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Serine_Button.setText("Serine");
        Serine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Serine_ButtonActionPerformed(evt);
            }
        });

        Threonine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Threonine_Button.setText("Threonine");
        Threonine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Threonine_ButtonActionPerformed(evt);
            }
        });

        Valine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Valine_Button.setText("Valine");
        Valine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Valine_ButtonActionPerformed(evt);
            }
        });

        Cysteine_Button.setForeground(new java.awt.Color(0, 0, 255));
        Cysteine_Button.setText("Cysteine");
        Cysteine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cysteine_ButtonActionPerformed(evt);
            }
        });

        Leucine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Leucine_Button.setText("Leucine");
        Leucine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Leucine_ButtonActionPerformed(evt);
            }
        });

        Methionine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Methionine_Button.setText("Methionine");
        Methionine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Methionine_ButtonActionPerformed(evt);
            }
        });

        Phenylalanine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Phenylalanine_Button.setText("Phenylalanine");
        Phenylalanine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Phenylalanine_ButtonActionPerformed(evt);
            }
        });

        Tryptophan_Button.setForeground(new java.awt.Color(255, 0, 0));
        Tryptophan_Button.setText("Tryptophan");
        Tryptophan_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tryptophan_ButtonActionPerformed(evt);
            }
        });

        Tyrosine_Button.setForeground(new java.awt.Color(255, 0, 0));
        Tyrosine_Button.setText("Tyrosine");
        Tyrosine_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tyrosine_ButtonActionPerformed(evt);
            }
        });

        Clear_Button.setText("Clear");
        Clear_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_ButtonActionPerformed(evt);
            }
        });

        Random_Button.setText("Random");
        Random_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Random_ButtonActionPerformed(evt);
            }
        });

        jTextField16.setEditable(false);
        jTextField16.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jTextField16.setText("Random Size");
        jTextField16.setBorder(null);
        jTextField16.setOpaque(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Proline_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Serine_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Threonine_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tryptophan_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tyrosine_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Valine_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Random_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Alanine_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Glycine_Button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Arginine_Button)
                            .addComponent(Histidine_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Asparagine_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AsparticAcid_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Isoleucine_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Leucine_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Cysteine_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GlutamicAcid_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Glutamine_Button))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Lysine_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Methionine_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Phenylalanine_Button)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Random_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Clear_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Alanine_Button, Arginine_Button, Asparagine_Button, AsparticAcid_Button, Cysteine_Button, GlutamicAcid_Button, Glutamine_Button, Glycine_Button, Histidine_Button, Isoleucine_Button, Leucine_Button, Lysine_Button, Methionine_Button, Phenylalanine_Button, Proline_Button, Serine_Button, Threonine_Button, Tryptophan_Button, Tyrosine_Button, Valine_Button});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Alanine_Button)
                                    .addComponent(Arginine_Button)
                                    .addComponent(Asparagine_Button)
                                    .addComponent(AsparticAcid_Button)
                                    .addComponent(Cysteine_Button)
                                    .addComponent(GlutamicAcid_Button)
                                    .addComponent(Glutamine_Button)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Delete_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Clear_Button)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Glycine_Button)
                            .addComponent(Histidine_Button)
                            .addComponent(Isoleucine_Button)
                            .addComponent(Leucine_Button)
                            .addComponent(Lysine_Button)
                            .addComponent(Methionine_Button)
                            .addComponent(Phenylalanine_Button)))
                    .addComponent(jTextField16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Serine_Button)
                    .addComponent(Tyrosine_Button)
                    .addComponent(Tryptophan_Button)
                    .addComponent(Proline_Button)
                    .addComponent(Valine_Button)
                    .addComponent(Threonine_Button)
                    .addComponent(Random_Button)
                    .addComponent(Random_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        Open.setText("Open .pdb");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        jMenu1.add(Open);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(user_charges, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(user_ss_only, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add_ss, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Mut_prob, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(swap_ss, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(max_ss_qt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(max_ss_len, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(min_ss_len, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(num_pops)
                                    .addComponent(pop_size, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ga_cycles, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton9))
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(swap_ss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_ss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mut_prob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(min_ss_len, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(max_ss_len, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(max_ss_qt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(user_ss_only))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ga_cycles, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pop_size, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num_pops, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(user_charges, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addGap(7, 7, 7)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        charges = user_charges.getText();
        cur_len = charges.length();
        String directions = new String();
        for(int i=1; i<charges.length(); i++){
            directions+='r';
        }
        //view1.die();
        
        //If the sequence was changed from when we opened the file don't use it
        if(!charges.equals(customHPSeq)){
            usedPDB = false;
        }
        
        jPanel1.removeAll();
        view1 = new HP_Model_Viewer();
        view1.build(jPanel1, directions, charges);
        
        jPanel2.removeAll();
        view2 = new HP_Model_Viewer();
        view2.build(jPanel2, directions, charges);
        
        jPanel3.removeAll();
        view3 = new HP_Model_Viewer();
        view3.build(jPanel3, directions, charges);
        
        jPanel4.removeAll();
        view4 = new HP_Model_Viewer();
        view4.build(jPanel4, directions, charges);
        
      
        pack();
        info = new Info(this);
        info.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(rebuilt == true){
            jPanel1.removeAll();
            view1 = new HP_Model_Viewer();
            view1.build(jPanel1, info.getView2(),getCharges()); 
        }
        else{
            view1.morph(info.getView2());
        }
        pack();
        rebuilt =false;
        prot_info_box.setText(info.getInfo(2));
    }//GEN-LAST:event_jButton5ActionPerformed

    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(rebuilt == true){
            jPanel1.removeAll();
            view1 = new HP_Model_Viewer();
            view1.build(jPanel1, info.getView1(),getCharges());
        }
        else{
            view1.morph(info.getView1());
        }
        pack();
        rebuilt =false;
        prot_info_box.setText(info.getInfo(1));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(rebuilt == true){
            jPanel1.removeAll();
            view1 = new HP_Model_Viewer();
            view1.build(jPanel1, info.getView3(),getCharges());
        }
        else{
            view1.morph(info.getView3());
        }
        pack();
        rebuilt =false;
        prot_info_box.setText(info.getInfo(3));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        info.prev();  
        view2.morph(info.getView1());
        pack();
        view3.morph(info.getView2());
        pack();   
        view4.morph(info.getView3());
        pack();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        info.next();   
        view2.morph(info.getView1());
        pack();      
        view3.morph(info.getView2());
        pack();    
        view4.morph(info.getView3());
        pack();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        Comments.load();
    }//GEN-LAST:event_jButton4ActionPerformed

    @SuppressWarnings("static-access")
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Edit_Structure cur_protien = new Edit_Structure(info.getBigView(), "hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh");
        cur_protien.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
            //get the server name or address.
        new ConnMan(this).setVisible(true);
        jButton1.setEnabled(true);
        jButton9.setText("Reconnect");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void user_chargesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_chargesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_chargesActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        int returnVal = FileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            pdbFile = FileChooser.getSelectedFile();
            try{
            	getSeq(pdbFile);
                //Scanner s = new Scanner(file);
                user_charges.setText(customHPSeq);
                usedPDB = true;
            }
            catch(Exception e){
                System.out.println("Problem Reading From File");
            }
        }
    }
    public File getPDBFile(){
        return pdbFile;
    }
    public String[] getAminoAcidSequence(){
    	ArrayList<String> aa = new ArrayList<String>();
    	String[] stringAminoAcidSeq = new String[aminoAcids.size()];
    	for(int i = 0; i < stringAminoAcidSeq.length; i++){
    		if( aminoAcids.get(i).equals("ALA")){
    			aa.add("A");
    		}
    		else if(aminoAcids.get(i).equals("ARG")){
    			aa.add("R");
    		}
    		else if(aminoAcids.get(i).equals("ASN")){
    			aa.add("N");
    		}
    		else if(aminoAcids.get(i).equals("ASP")){
    			aa.add("D");
    		}
    		else if(aminoAcids.get(i).equals("CYS")){
    			aa.add("C");
    		}
    		else if(aminoAcids.get(i).equals("GLN")){
    			aa.add("Q");
    		}
    		else if(aminoAcids.get(i).equals("GLU")){
    			aa.add("E");
    		}
    		else if(aminoAcids.get(i).equals("GLY")){
    			aa.add("G");
    		}
    		else if(aminoAcids.get(i).equals("HIS")){
    			aa.add("H");
    		}
    		else if(aminoAcids.get(i).equals("ILE")){
    			aa.add("I");
    		}
    		else if(aminoAcids.get(i).equals("LEU")){
    			aa.add("L");
    		}
    		else if(aminoAcids.get(i).equals("LYS")){
    			aa.add("K");
    		}
    		else if(aminoAcids.get(i).equals("MET")){
    			aa.add("M");
    		}
    		else if(aminoAcids.get(i).equals("PHE")){
    			aa.add("F");
    		}
    		else if(aminoAcids.get(i).equals("PRO")){
    			aa.add("P");
    		}
    		else if(aminoAcids.get(i).equals("SER")){
    			aa.add("S");
    		}
    		else if(aminoAcids.get(i).equals("THR")){
    			aa.add("T");
    		}
    		else if(aminoAcids.get(i).equals("TRP")){
    			aa.add("W");
    		}
    		else if(aminoAcids.get(i).equals("TYR")){
    			aa.add("Y");
    		}
    		else if(aminoAcids.get(i).equals("VAL")){
    			aa.add("V");
    		}
    		stringAminoAcidSeq[i] = aminoAcids.get(i);
    	}
    	for(int i = 0; i < aa.size(); i++){
    		stringAminoAcidSeq[i] = aa.get(i);
    	}
    	return stringAminoAcidSeq;
    }
    
  //Gets the sequence from a .pdb and parses it into h and p
    public void getSeq(File f) throws FileNotFoundException{
    	Scanner s = new Scanner(f);
    	String in = s.nextLine();
    	while(!in.startsWith("SEQRES")){
    		in = s.nextLine();
    	}
    	
    	customHPSeq = "";
    	while(in.startsWith("SEQRES")){
	        
	    	String parseIn[] = in.split(" ");
	    	for(int i = 0; i< parseIn.length; i++){
	    		if( parseIn[i].equals("ALA")){
	    			customHPSeq += "h";
	    			aminoAcids.add("A");
	    		}
	    		else if(parseIn[i].equals("ARG")){
	    			customHPSeq += "p";
	    			aminoAcids.add("R");
	    		}
	    		else if(parseIn[i].equals("ASN")){
	    			customHPSeq += "p";
	    			aminoAcids.add("N");
	    		}
	    		else if(parseIn[i].equals("ASP")){
	    			customHPSeq += "p";
	    			aminoAcids.add("D");
	    		}
	    		else if(parseIn[i].equals("CYS")){
	    			customHPSeq += "p";
	    			aminoAcids.add("C");
	    		}
	    		else if(parseIn[i].equals("GLN")){
	    			customHPSeq += "p";
	    			aminoAcids.add("Q");
	    		}
	    		else if(parseIn[i].equals("GLU")){
	    			customHPSeq += "p";
	    			aminoAcids.add("E");
	    		}
	    		else if(parseIn[i].equals("GLY")){
	    			customHPSeq += "h";
	    			aminoAcids.add("G");
	    		}
	    		else if(parseIn[i].equals("HIS")){
	    			customHPSeq += "p";
	    			aminoAcids.add("H");
	    		}
	    		else if(parseIn[i].equals("ILE")){
	    			customHPSeq += "h";
	    			aminoAcids.add("I");
	    		}
	    		else if(parseIn[i].equals("LEU")){
	    			customHPSeq += "h";
	    			aminoAcids.add("L");
	    		}
	    		else if(parseIn[i].equals("LYS")){
	    			customHPSeq += "p";
	    			aminoAcids.add("K");
	    		}
	    		else if(parseIn[i].equals("MET")){
	    			customHPSeq += "h";
	    			aminoAcids.add("M");
	    		}
	    		else if(parseIn[i].equals("PHE")){
	    			customHPSeq += "h";
	    			aminoAcids.add("F");
	    		}
	    		else if(parseIn[i].equals("PRO")){
	    			customHPSeq += "h";
	    			aminoAcids.add("P");
	    		}
	    		else if(parseIn[i].equals("SER")){
	    			customHPSeq += "p";
	    			aminoAcids.add("S");
	    		}
	    		else if(parseIn[i].equals("THR")){
	    			customHPSeq += "p";
	    			aminoAcids.add("T");
	    		}
	    		else if(parseIn[i].equals("TRP")){
	    			customHPSeq += "h";
	    			aminoAcids.add("W");
	    		}
	    		else if(parseIn[i].equals("TYR")){
	    			customHPSeq += "h";
	    			aminoAcids.add("Y");
	    		}
	    		else if(parseIn[i].equals("VAL")){
	    			customHPSeq += "h";
	    			aminoAcids.add("V");
	    		}
	    	}
	    	in = s.nextLine();
	    	System.out.println(in);
    	}
    }
//GEN-LAST:event_OpenActionPerformed

    private void Alanine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alanine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("ALA");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("ALA");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Alanine_ButtonActionPerformed

    private void Lysine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lysine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("LYS");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("LYS");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Lysine_ButtonActionPerformed

    private void Tyrosine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tyrosine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("TYR");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("TYR");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Tyrosine_ButtonActionPerformed

    private void Proline_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proline_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("PRO");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("PRO");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Proline_ButtonActionPerformed

    private void Arginine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Arginine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("ARG");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("ARG");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Arginine_ButtonActionPerformed

    private void Asparagine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Asparagine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("ASN");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("ASN");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Asparagine_ButtonActionPerformed

    private void AsparticAcid_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsparticAcid_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("ASP");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("ASP");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_AsparticAcid_ButtonActionPerformed

    private void Cysteine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cysteine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("CYS");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("CYS");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Cysteine_ButtonActionPerformed

    private void GlutamicAcid_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GlutamicAcid_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("GLU");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("GLU");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_GlutamicAcid_ButtonActionPerformed

    private void Glutamine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Glutamine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("GLN");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("GLN");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Glutamine_ButtonActionPerformed

    private void Glycine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Glycine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("GLY");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("GLY");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Glycine_ButtonActionPerformed

    private void Histidine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Histidine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("HIS");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("HIS");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Histidine_ButtonActionPerformed

    private void Isoleucine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Isoleucine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("ILE");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("ILE");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Isoleucine_ButtonActionPerformed

    private void Leucine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Leucine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("LEU");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("LEU");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Leucine_ButtonActionPerformed

    private void Methionine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Methionine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("MET");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("MET");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Methionine_ButtonActionPerformed

    private void Phenylalanine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Phenylalanine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("PHE");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("PHE");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Phenylalanine_ButtonActionPerformed

    private void Serine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Serine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("SER");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("SER");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Serine_ButtonActionPerformed

    private void Threonine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Threonine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "p";
            aminoAcids.add("THR");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "p";
            aminoAcids.clear();
            aminoAcids.add("THR");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Threonine_ButtonActionPerformed

    private void Tryptophan_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tryptophan_ButtonActionPerformed
       if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("TRP");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("TRP");
            user_charges.setText(customHPSeq);
        }
    }//GEN-LAST:event_Tryptophan_ButtonActionPerformed

    private void Valine_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Valine_ButtonActionPerformed
        if(customHPSeq.equals(user_charges.getText())){
            customHPSeq += "h";
            aminoAcids.add("VAL");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
        else{
            customHPSeq = "";
            customHPSeq += "h";
            aminoAcids.clear();
            aminoAcids.add("VAL");
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(aminoAcids.toString());
        }
    }//GEN-LAST:event_Valine_ButtonActionPerformed

    private void Clear_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_ButtonActionPerformed
        if(aminoAcids.size() > 0){
            aminoAcids.clear();
            customHPSeq = "";
            user_charges.setText(customHPSeq);
            AminoSequenceBox.setText(""); 
        }
    }//GEN-LAST:event_Clear_ButtonActionPerformed

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        if(aminoAcids.size() > 0){
            aminoAcids.remove(aminoAcids.size()-1);
            customHPSeq = customHPSeq.substring(0, customHPSeq.length()-1);
            user_charges.setText(customHPSeq);
            if(aminoAcids.size() == 0)
                AminoSequenceBox.setText("");
            else
                AminoSequenceBox.setText(aminoAcids.toString());
        }
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Random_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Random_ButtonActionPerformed
    	Random r = new Random();
        for(int i=0; i<(Integer)Random_Size.getValue(); i++){
           switch(r.nextInt(20)){
               case 0:
                   Valine_Button.doClick(0);
                   break;
               case 1:
                   Tryptophan_Button.doClick(0);
                   break;
               case 2:
                   Threonine_Button.doClick(0);
                   break;
               case 3: Serine_Button.doClick(0);
                   break;
               case 4: Phenylalanine_Button.doClick(0);
                   break;
               case 5: Methionine_Button.doClick(0);
                   break;
               case 6: Leucine_Button.doClick(0);
                   break;
               case 7: Isoleucine_Button.doClick(0);
                   break;
               case 8: Histidine_Button.doClick(0);
                   break;
               case 9: Glycine_Button.doClick(0);
                   break;
               case 10: Glutamine_Button.doClick(0);
                   break;
               case 11: GlutamicAcid_Button.doClick(0);
                   break;
               case 12: Cysteine_Button.doClick(0);
                   break;
               case 13: AsparticAcid_Button.doClick(0);
                   break;
               case 14: Asparagine_Button.doClick(0);
                   break;
               case 15: Arginine_Button.doClick(0);
                   break;
               case 16: Proline_Button.doClick(0);
                   break;
               case 17: Tyrosine_Button.doClick(0);
                   break;
               case 18: Lysine_Button.doClick(0);
                   break;
               case 19: Alanine_Button.doClick(0);
                   break;
           }
       }
    }//GEN-LAST:event_Random_ButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    
    public boolean usedFile(){
        return usedPDB;
    }
    
    //**************
    //Bens functions
    //**************
    public int getMinSSLen(){    
            return (Integer)min_ss_len.getValue();
    }
    public int getMaxSSLen(){    
            return (Integer)max_ss_len.getValue();
    }
    public int getSSqt(){    
            return (Integer)max_ss_qt.getValue();
    }
    public int getNumPops(){    
            return (Integer)num_pops.getValue();
    }
    public int getPopSize(){    
            return (Integer)pop_size.getValue();
    }
    public int getSwapSS(){    
            return (Integer)swap_ss.getValue();
    }
    public int getMutProb(){    
            return (Integer)Mut_prob.getValue();
    }
    public int getAddSS(){    
            return (Integer)add_ss.getValue();
    }
    public int getGAcycles(){    
            return (Integer)ga_cycles.getValue();
    }
    public String getCharges(){    
            return user_charges.getText();
    }
    public boolean getUsrSSonly(){    
            return user_ss_only.isSelected();
    } 
    public int[] getUsrSSdef(){   
        int gui_raw[] = new int[25];
        int ctr=0;
        for(int i=0;i<25;i++){
            if(user_ss_define.getValueAt(i, 0) != null && ((Integer)user_ss_define.getValueAt(i, 0)>3)){
                gui_raw[ctr] = (Integer)user_ss_define.getValueAt(i, 0);
                ctr++;
         }  }
        int user_def[] = new int[ctr];

        for(int i=0;i<ctr; i++){ user_def[i] = gui_raw[i];  }
        return user_def;
    }  

    public void setServerName(String name){
        this.server_name = name;
    }
    public String getServerName(){
        return this.server_name;
    }
    public void redraw(String p1, String p2, String p3, String details){
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        jButton7.setEnabled(true);
        view1.morph(p1);
        view2.morph(p1);
        view3.morph(p2);
        view4.morph(p3);
        prot_info_box.setText(details);
    }
    
    public void redrawBigWindow(String p1, String details){
        prot_info_box.setText(details);
        if (p1.length() == (charges.length()-1) && cur_len != p1.length()){
            cur_len = p1.length();
            view1.die();
            jPanel1.removeAll();
            view1 = new HP_Model_Viewer();
            view1.build(jPanel1, p1,charges);
            pack();
        }
        if(p1.length() <(charges.length()) && cur_len != p1.length()){
            cur_len = p1.length();
            String ss = new String();
            for (int i=0; i<p1.length()+2; i++){
                ss+='h';
            }
            jPanel1.removeAll();
            view1.die();
            view1 = new HP_Model_Viewer();
            view1.build(jPanel1, p1,ss);
            pack();
        }
        else{
            view1.morph(p1);
        }
    }
    
    class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".pdb");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Protein Data Base (*.pdb)";
        }
    } 
    
    private final int MAX_CUSTOM_AMINO_ACID_LENGTH = 15;
    
    private int cur_len;
    private String charges;
    private String server_name;
    private boolean rebuilt;
    private HP_Model_Viewer view1;
    private HP_Model_Viewer view2;
    private HP_Model_Viewer view3;
    private HP_Model_Viewer view4;
    private Info info;
    private boolean usedPDB;
    private boolean usedCustomSeq;
    private File pdbFile;
    private ArrayList<String> aminoAcids; 
    private String customHPSeq;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alanine_Button;
    private javax.swing.JTextArea AminoSequenceBox;
    private javax.swing.JButton Arginine_Button;
    private javax.swing.JButton Asparagine_Button;
    private javax.swing.JButton AsparticAcid_Button;
    private javax.swing.JButton Clear_Button;
    private javax.swing.JButton Cysteine_Button;
    private javax.swing.JButton Delete_Button;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JButton GlutamicAcid_Button;
    private javax.swing.JButton Glutamine_Button;
    private javax.swing.JButton Glycine_Button;
    private javax.swing.JButton Histidine_Button;
    private javax.swing.JButton Isoleucine_Button;
    private javax.swing.JButton Leucine_Button;
    private javax.swing.JButton Lysine_Button;
    private javax.swing.JButton Methionine_Button;
    private javax.swing.JSlider Mut_prob;
    private javax.swing.JMenuItem Open;
    private javax.swing.JButton Phenylalanine_Button;
    private javax.swing.JButton Proline_Button;
    private javax.swing.JButton Random_Button;
    private javax.swing.JSpinner Random_Size;
    private javax.swing.JButton Serine_Button;
    private javax.swing.JButton Threonine_Button;
    private javax.swing.JButton Tryptophan_Button;
    private javax.swing.JButton Tyrosine_Button;
    private javax.swing.JButton Valine_Button;
    private javax.swing.JSlider add_ss;
    private javax.swing.JSpinner ga_cycles;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JSpinner max_ss_len;
    private javax.swing.JSpinner max_ss_qt;
    private javax.swing.JSpinner min_ss_len;
    private javax.swing.JSpinner num_pops;
    private javax.swing.JSpinner pop_size;
    private javax.swing.JTextArea prot_info_box;
    private javax.swing.JSlider swap_ss;
    private javax.swing.JTextField user_charges;
    private javax.swing.JTable user_ss_define;
    private javax.swing.JCheckBox user_ss_only;
    // End of variables declaration//GEN-END:variables
    
}
